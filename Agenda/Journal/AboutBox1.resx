<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCqRXhpZgAATU0AKgAAAAgAAwE7AAIAAAAFAAAAModpAAQAAAAB
        AAAAOJydAAEAAAAKAAAAmAAAAABsdWtlAAAABJADAAIAAAAUAAAAbpAEAAIAAAAUAAAAgpKRAAIAAAAD
        MzkAAJKSAAIAAAADMzkAAAAAAAAyMDEwOjEyOjIxIDE5OjU4OjAzADIwMTA6MTI6MjEgMTk6NTg6MDMA
        AABsAHUAawBlAAAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxobIxwW
        FiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgAtgCCAwEiAAIRAQMRAf/EAB8AAAEFAQEB
        AQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
        cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
        1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//E
        ALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDTh
        JfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKT
        lJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5
        +v/aAAwDAQACEQMRAD8A+no4C6gkgfrTjbY/j/SrAxjI6UvWndisimsJJOD0p4t8jO79KsBQDkDmlouw
        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
</value>
  </data>
</root>